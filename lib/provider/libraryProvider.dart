import 'package:flutter/foundation.dart';
import '../database/libraryDB.dart';
import '../model/memberItem.dart';
import '../model/libraryCardItem.dart';

class LibraryProvider with ChangeNotifier {
  List<LibraryCardItem> libraryCards = [];
  List<MemberItem> members = [];

  Future<void> addMember(MemberItem member) async {
    var db = LibraryDB(dbName: 'library.db');
    int keyID = await db.insertMember(member);

    if (keyID != -1) {
      members.add(member);
      print("‚úÖ ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${member.firstName} ${member.lastName}, ID: $keyID");

      // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ï‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà
      DateTime issuedDate = DateTime.now();  // ‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏ö‡∏±‡∏ï‡∏£
      DateTime expiryDate = issuedDate.add(Duration(days: 365));  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ 1 ‡∏õ‡∏µ

      LibraryCardItem newCard = LibraryCardItem(
        cardNumber: "CARD-${DateTime.now().millisecondsSinceEpoch}",
        memberId: keyID.toString(),
        issuedDate: issuedDate,
        expiryDate: expiryDate,  
        status: "Active",
      );

      await db.insertLibraryCard(newCard); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ï‡∏£‡∏•‡∏á Database
      print("‚úÖ ‡∏ö‡∏±‡∏ï‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á: ${newCard.cardNumber}");

      notifyListeners();
      await getLibraryCards(); // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    } else {
      print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏î‡πâ");
    }
  }




  Future<void> updateMember(MemberItem updatedMember) async {
    var db = LibraryDB(dbName: 'library.db');

    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    await db.updateMember(updatedMember);

    // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà
    await getLibraryCards();

    // üî• ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ UI ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
    notifyListeners();
    print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å: ${updatedMember.id}");

  }




  Future<void> getLibraryCards() async {
    var db = LibraryDB(dbName: 'library.db');
    
    libraryCards = await db.loadAllLibraryCards(); // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏ö‡∏±‡∏ï‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà
    members = await db.loadAllMembers(); // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà

    print("üìú ‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${members.length} ‡∏Ñ‡∏ô");
    print("üìú ‡∏°‡∏µ‡∏ö‡∏±‡∏ï‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${libraryCards.length} ‡πÉ‡∏ö");

    notifyListeners(); // üî• ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä UI ‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
  }



   // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ö‡∏±‡∏ï‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
  void searchLibraryCards(String query) {
    if (query.isEmpty) {
      // ‡∏ñ‡πâ‡∏≤‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      getLibraryCards();
    } else {
      // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
      libraryCards = libraryCards.where((card) {
        final member = members.firstWhere((m) => m.id == card.memberId);
        final fullName = '${member.firstName} ${member.lastName}';
        return fullName.contains(query);  // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≥‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•
      }).toList();
      notifyListeners();  // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    }
  }

  Future<void> filterLibraryCards({bool latest = true}) async {
    var db = LibraryDB(dbName: 'library.db');
    libraryCards = await db.loadAllLibraryCards();

    libraryCards.sort((a, b) =>
        latest ? b.issuedDate.compareTo(a.issuedDate) : a.issuedDate.compareTo(b.issuedDate));

    notifyListeners();
  }

  Future<void> deleteMember(String memberId) async {
    var db = LibraryDB(dbName: 'library.db');
    
    // ‚úÖ ‡∏•‡∏ö‡∏ö‡∏±‡∏ï‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô
    await db.deleteLibraryCardByMemberId(memberId);

    // ‚úÖ ‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
    await db.deleteMemberById(memberId);

    // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ)
    members = await db.loadAllMembers();

    // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà
    await getLibraryCards();

    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI
    notifyListeners();
  }




}
